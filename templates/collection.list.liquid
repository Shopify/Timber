<!-- /templates/collection.list.liquid -->
{% comment %}

  By using a variation of the 'view all' parameter technique, you can create
  a custom layout for any template by adding ?view=xxxx

  In this example, you can have a list view of your collection page by going to
  /collections/all?view=list

  For more information on collection tags:
    - http://docs.shopify.com/themes/liquid-variables/collection

  For more information on the ?view parameter:
    - http://docs.shopify.com/support/configuration/store-customization/can-i-show-more-than-50-products-on-my-homepage-can-i-add-a-view-all-function-to-my-collection-pages#add-view-all

{% endcomment %}

{% paginate collection.products by 20 %}

{% include 'breadcrumb' %}

{% comment %}
  Use .grid--rev so that the collection tags appear below the products on mobile
{% endcomment %}
<div class="grid--rev">
  <div class="grid__item large--three-quarters">

    {% comment %}
      Different markup if a collection description exists
    {% endcomment %}
    {% if collection.description != blank %}
      <header class="section-header">
        <h1 class="section-header__title">{{ collection.title }}</h1>
        <div class="rte rte--header">
          {{ collection.description }}
        </div>
      </header>
      <hr>
      <div class="section-header">
        <div class="section-header__right">
          {% include 'collection-sorting' %}
          {% include 'collection-views' %}
        </div>
      </div>
    {% else %}
      <header class="section-header">
        <h1 class="section-header__title section-header__left">{{ collection.title }}</h1>
        <div class="section-header__right">
          {% include 'collection-sorting' %}
          {% include 'collection-views' %}
        </div>
      </header>
    {% endif %}

    {% comment %}
      Use class grid-uniform to have evenly sized columns clear
      each other properly at each breakpoint.
    {% endcomment %}
    <div class="grid-uniform">

      {% comment %}
        Loop through our products in the current collection.
        See the snippet 'product-grid-item' for the layout.
      {% endcomment %}
      {% for product in collection.products %}

        {% comment %}
          Check if the product is on sale and set a variable to be used below.
        {% endcomment %}
        {% assign on_sale = false %}
        {% if product.compare_at_price > product.price %}
          {% assign on_sale = true %}
        {% endif %}

        {% comment %}
          Check if the product is sold out and set a variable to be used below.
        {% endcomment %}
        {% assign sold_out = true %}
        {% if product.available %}
          {% assign sold_out = false %}
        {% endif %}

        {% comment %}
          Set a class for sold-out and on-sale items
        {% endcomment %}
        <div class="grid__item{% if sold_out %} sold-out{% endif %}{% if on_sale %} on-sale{% endif %}">

          {% comment %}
            Link to your product with the 'within: collection' filter for the link to be aware of the collection.
            This allows you to create collection-based navigation on the product page.

            Results of using 'within: collection':
            - Instead of a URL with /products/product-handle
              you would get /collections/collection-handle/products/product-handle

            For more info on navigation within a collection
              - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

          {% endcomment %}
          <div class="grid large--display-table">
            <div class="grid__item large--one-fifth large--display-table-cell medium--one-third">
              <a href="{{ product.url | within: collection }}">
                <img src="{{ product.featured_image.src | img_url: 'medium' }}" alt="{{ product.featured_image.alt | escape }}" class="grid__image">
              </a>
            </div>
            <div class="grid__item large--four-fifths large--display-table-cell medium--two-thirds">
              <div class="grid">
                <div class="grid__item large--three-quarters medium--two-thirds">
                  <p class="h6">{{ product.title }}</p>
                  <div class="rte">
                    {% if product.excerpt.size > 0 %}
                      {{ product.excerpt }}
                    {% else %}
                      <p>{{ product.content | strip_html | truncatewords: 30 }}</p>
                    {% endif %}
                  </div>
                </div>
                <div class="grid__item large--one-quarter medium--one-third">
                  {% comment %}
                    You can show a leading 'from' or 'up to' by checking 'product.price_varies'
                    if your variants have different prices.
                  {% endcomment %}
                  {% if on_sale %}
                    {% if product.price_varies %}
                      {% assign sale_price = product.price | money %}
                      {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
                    {% else %}
                      <strong>{{ 'products.product.on_sale' | t }}</strong>
                      {{ product.price | money }}
                    {% endif %}
                  {% else %}
                    {% if product.price_varies %}{{ 'products.general.from' | t }}{% endif %}
                    {{ product.price | money }}
                  {% endif %}
                  {% if sold_out %}
                    <br><strong>{{ 'products.product.sold_out' | t }}</strong>
                  {% endif %}
                  {% if on_sale %}
                    <br><s>{{ product.compare_at_price | money }}</s>
                  {% endif %}
                </div>
              </div>
            </div>
          </div>
        </div>

      {% else %}

        <div class="grid__item">
          <p>{{ 'collections.general.no_matches' | t }}</p>
        </div>

      {% endfor %}

    </div>

    {% if paginate.pages > 1 %}
      <hr>

      <div class="text-center">
        {% include 'pagination-custom' %}
      </div>
    {% endif %}

  </div>

  <div class="grid__item large--one-quarter">
    {% include 'collection-sidebar' %}
  </div>
</div>

{% endpaginate %}
